import{_ as y,c,o as l,a as e,x as k,t as f,b as B,A as F,d as m,u as j,h as L,e as E,l as $,F as A,r as M,p as N,B as g,v as U,q as I,y as V,z as P,s as z}from"./index-DRh2teEt.js";import{a as _}from"./index-DxVLoZJQ.js";const D={class:"card flex between"},H={class:"flex"},J={class:"card__title"},T={__name:"RoomListCard",props:["title","personnel","button"],setup(a){const d=a;return(s,r)=>(l(),c("div",D,[e("div",H,[e("div",J,f(d.title),1),e("div",null,"("+f(d.personnel)+"/2명)",1)]),k(s.$slots,"default",{},void 0)]))}},q=y(T,[["__scopeId","data-v-2ead68e1"]]),G={class:"modal-content"},K={class:"modal-header"},O={__name:"ModalComp",props:{visible:Boolean,headerContent:String,applyContent:String,applyFunction:Function},emits:["close"],setup(a,{emit:d}){const s=d,r=()=>{s("close")};return(p,u)=>a.visible?(l(),c("div",{key:0,class:"modal-backdrop",onClick:F(r,["self"])},[e("div",G,[e("div",K,[e("h3",null,f(a.headerContent),1),e("button",{class:"close-btn",onClick:r},"✕")]),k(p.$slots,"default",{},void 0),e("button",{class:"apply-btn",onClick:u[0]||(u[0]=(...i)=>a.applyFunction&&a.applyFunction(...i))},f(a.applyContent),1)])])):B("",!0)}},Q=y(O,[["__scopeId","data-v-2de0ccbd"]]),W={class:"list"},X={key:0},Y={key:1},Z={key:2},ee={class:"flex dir-col"},oe=["onClick","disabled"],te={class:"p-10"},se={__name:"HomePage",setup(a){const{show:d}=z(),s=m(null),r=m([]),p=m(!1),u=m(!1),i=m(null),b=j(),h={id:b.playerId,name:b.username},C=U();console.log(h.id);const v=L();async function R(){if(i.value==null||i.value.trim().length<2){d("방 이름은 2글자 이상이어야 합니다","error",1e3);return}try{const o=await _.post(`${v.BASEURL}/api/rooms/create`,null,{params:{title:i.value}});if(o.status!=200)throw new Error("Failed to create room");if(s.value=await o.data,console.log("Room created:",s.value),(await _.post(`${v.BASEURL}/api/rooms/join/${s.value}`,h)).status!==200)throw new Error("Failed to join room");console.log("Join success"),C.push({name:"Room",params:{roomNo:s.value}})}catch(o){console.error(o)}}async function x(o){try{if(s.value=o,(await _.post(`${v.BASEURL}/api/rooms/join/${o}`,h)).status!==200)throw new Error("Failed to join room");console.log("Join success:",o),C.push({name:"Room",params:{roomNo:s.value}})}catch(t){console.error(t)}}const w=async()=>{try{p.value=!0;const o=await _.get(`${v.BASEURL}/api/rooms`);r.value=o.data}catch(o){console.error("방 목록 로딩 실패:",o)}finally{p.value=!1}};return E(w),(o,t)=>{const S=N("font-awesome-icon");return l(),c("div",W,[e("button",{class:"refresh-btn btn",onClick:w},"🔄 새로고침"),p.value?(l(),c("div",X,"로딩 중...")):r.value.length===0?(l(),c("div",Y,"⚠ 방이 없습니다.")):(l(),c("div",Z,[e("div",ee,[(l(!0),c(A,null,M(r.value,n=>(l(),I(q,{key:n.roomId,title:n.title,personnel:n.players.length},{default:g(()=>[e("button",{onClick:ne=>x(n.roomId),disabled:n.players.length>=2,class:"btn"}," 입장 ",8,oe)]),_:2},1032,["title","personnel"]))),128))])])),e("div",te,[e("button",{onClick:t[0]||(t[0]=n=>u.value=!0),class:"btn circle create-btn"},[$(S,{class:"create-btn__icon",icon:["fas","plus"],size:"2xl"})])]),$(Q,{visible:u.value,onClose:t[2]||(t[2]=n=>u.value=!1),headerContent:"방 생성하기",applyContent:"방 생성",applyFunction:R},{default:g(()=>[e("div",null,[t[3]||(t[3]=e("label",{for:"room-name"},"방 이름",-1)),V(e("input",{type:"text",name:"room-name","onUpdate:modelValue":t[1]||(t[1]=n=>i.value=n)},null,512),[[P,i.value]])])]),_:1},8,["visible"])])}}},re=y(se,[["__scopeId","data-v-414d6e52"]]);export{re as default};
